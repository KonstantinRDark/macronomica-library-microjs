{"version":3,"sources":["../../../../src/plugins/node-http/methods/listen.js"],"names":["listenHttp","jsonBodyParser","json","urlencodedParser","urlencoded","extended","type","preprocessors","app","plugin","onClose","settings","listenHttpRoute","server","createServer","handleRequest","host","port","log","debug","on","error","socket","setNoDelay","Promise","resolve","reject","close","err","message","info","listen","req","res","next","_originalUrl","url","parse","query","pathname","method","code","status","response404","transport","origin","headers","time","Date","now","Object","assign","verify","trace","name","pin","body","request","role","warn","act","result","outJson","JSON","stringify","writeHead","Buffer","byteLength","updateDuration","duration","end","statusMessage"],"mappings":";;;;;;;;kBA+BwBA,U;;AA/BxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAcA,MAAMC,iBAAiB,qBAAWC,IAAX,EAAvB;AACA,MAAMC,mBAAmB,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAzB;AACA,MAAMC,OAAO,MAAb;;AAEA,MAAMC,gBAAgB,CACpBN,cADoB,EAEpBE,gBAFoB,CAAtB;;AAKe,SAASH,UAAT,CAAoBQ,GAApB,EAAyBC,MAAzB,EAAiCC,OAAjC,EAAyD;AAAA,MAAfC,QAAe,uEAAJ,EAAI;;AACtE,SAAO,SAASC,eAAT,GAA2B;AAChC,UAAMC,SAAS,eAAKC,YAAL,CAAkBC,aAAlB,CAAf;AADgC,yBAEmBJ,QAFnB,CAExBK,IAFwB;AAAA,UAExBA,IAFwB;AAAA,yBAEmBL,QAFnB,CAEJM,IAFI;AAAA,UAEJA,IAFI;;;AAIhCT,QAAIU,GAAJ,CAAQC,KAAR,CAAc,wBAAd,EAAwC,EAAEV,QAAQ,EAAEO,IAAF,EAAQC,IAAR,EAAV,EAAxC;AACAJ,WAAOO,EAAP,CAAU,OAAV,EAAmBZ,IAAIU,GAAJ,CAAQG,KAA3B;AACAR,WAAOO,EAAP,CAAU,YAAV,EAAyBE,MAAD,IAAY;AAClCA,aAAOC,UAAP,GADkC,CACb;AACtB,KAFD;;AAIAb,YAAQ,MAAM,IAAIc,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7Cb,aAAOc,KAAP,CAAcC,GAAD,IAAS;AACpB,YAAIA,OAAOA,IAAIC,OAAJ,KAAgB,aAA3B,EAA0C;AACxC,iBAAOH,OAAOE,GAAP,CAAP;AACD;AACDpB,YAAIU,GAAJ,CAAQY,IAAR,CAAa,6BAAb,EAA4C,EAAErB,QAAQ,EAAEO,IAAF,EAAQC,IAAR,EAAV,EAA5C;AACAQ;AACD,OAND;AAOD,KARa,CAAd,EAQI,SARJ;;AAUA,WAAO,IAAID,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCb,aAAOkB,MAAP,CAAcd,IAAd,EAAoBD,IAApB,EAA2BY,GAAD,IAAS;AACjC,YAAIA,GAAJ,EAAS;AACP,iBAAOF,OAAOE,GAAP,CAAP;AACD;AACDpB,YAAIU,GAAJ,CAAQY,IAAR,CAAa,0BAAb,EAAyC,EAAErB,QAAQ,EAAEO,IAAF,EAAQC,IAAR,EAAV,EAAzC;AACAQ;AACD,OAND;AAOD,KARM,CAAP;;AAUA,aAASV,aAAT,CAAuBiB,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAsC;AACpCF,UAAIG,YAAJ,GAAmBH,IAAII,GAAvB;AACAJ,UAAII,GAAJ,GAAU,cAAIC,KAAJ,CAAUL,IAAII,GAAd,CAAV;AACAJ,UAAIM,KAAJ,GAAY,aAAGD,KAAH,CAASL,IAAII,GAAJ,CAAQE,KAAjB,CAAZ;;AAEA,UAAIN,IAAII,GAAJ,CAAQG,QAAR,6BAAJ,EAAwC;AACtC/B,YAAIU,GAAJ,CAAQY,IAAR,CAAc,SAAQE,IAAIQ,MAAQ,8CAAlC,EAAgF;AAC9EC,gBAAQ,KADsE;AAE9EC,kDAF8E;AAG9EF,kBAAQR,IAAIQ;AAHkE,SAAhF;AAKA,eAAOG,YAAYV,GAAZ,EAAiB,2CAAjB,CAAP;AACD;;AAED,6BAAQD,IAAIQ,MAAJ,KAAe,MAAf,GAAwBjC,aAAxB,GAAwC,EAAhD,EAAoDyB,GAApD,EAAyDC,GAAzD,EAA+DL,GAAD,IAAS;AACrE,YAAIA,GAAJ,EAAS;AACPpB,cAAIU,GAAJ,CAAQG,KAAR,CAAcO,GAAd;AACApB,cAAIU,GAAJ,CAAQY,IAAR,CAAc,SAAQE,IAAIQ,MAAQ,oDAAlC,EAAsF;AACpFC,kBAAQ,KAD4E;AAEpFC,oDAFoF;AAGpFF,oBAAQR,IAAIQ;AAHwE,WAAtF;AAKA,iBAAOG,YAAYV,GAAZ,EAAiB,iDAAjB,CAAP;AACD;AACD,cAAMW,YAAY;AAChBtC,cADgB;AAEhBuC,kBAAQb,IAAIc,OAAJ,CAAa,YAAb,CAFQ;AAGhBN,kBAAQR,IAAIQ,MAHI;AAIhBO,gBAAQC,KAAKC,GAAL;AAJQ,SAAlB;;AAOA,YAAI,sCAA2BjB,IAAIc,OAAnC,EAA4C;AAC1CI,iBAAOC,MAAP,CAAcP,SAAd,EAAyB,uBAAIQ,MAAJ,CAAWpB,IAAIc,OAAJ,oCAAX,4BAAkEF,SAA3F;AACD;;AAEDA,kBAAUS,KAAV,GAAkB,CAChB,IAAIT,UAAUS,KAAV,IAAmB,EAAvB,CADgB,EAEhB7C,IAAI8C,IAFY,CAAlB;;AAKA,cAAMC,mBACAvB,IAAIwB,IAAJ,IAAY,EADZ,EAEDxB,IAAIM,KAFH,CAAN;AAIA,cAAMmB,UAAU,2BAAYjD,GAAZ;AACdoC,mBADc;AAEda,mBAAU,oCAAyBzB,IAAIc,OAA9B,GACL,uBAAIM,MAAJ,CAAWpB,IAAIc,OAAJ,kCAAX,4BAAgEW,OAD3D,GAEL;AAJU,WAKXF,GALW,EAAhB;;AAQA,YAAIA,IAAIG,IAAJ,KAAa,QAAjB,EAA2B;AACzBlD,cAAIU,GAAJ,CAAQyC,IAAR,CAAc,yBAAd,EAAwC,EAAEJ,GAAF,EAAOX,SAAP,EAAxC;AACApC,cAAIU,GAAJ,CAAQY,IAAR,CAAc,SAAQE,IAAIQ,MAAQ,oDAAlC,EAAsF;AACpFC,kBAAQ,KAD4E;AAEpFC,oDAFoF;AAGpFF,oBAAQR,IAAIQ;AAHwE,WAAtF;AAKA,iBAAOG,YAAYV,GAAZ,EAAiB,EAAjB,CAAP;AACD;;AAEDzB,YAAIoD,GAAJ,CAAQH,OAAR,EAAiB,CAACpC,KAAD,EAAQwC,MAAR,KAAmB;AAClC,cAAI,CAAC,CAACxC,KAAF,IAAWA,MAAMoB,IAAN,KAAe,4BAA9B,EAA4D;AAC1DjC,gBAAIU,GAAJ,CAAQY,IAAR,CAAc,SAAQE,IAAIQ,MAAQ,8CAAlC,EAAgF;AAC9EC,oBAAQ,KADsE;AAE9EC,sDAF8E;AAG9EF,sBAAQR,IAAIQ,MAHkE;AAI9Ee,iBAJ8E;AAK9EX;AAL8E,aAAhF;AAOA,mBAAOD,YAAYV,GAAZ,EAAiBZ,KAAjB,CAAP;AACD;;AAED,gBAAMoB,OAAOpB,QAAQ,GAAR,GAAc,GAA3B;AACA,gBAAMqB,SAASrB,6EAAf;;AAEA,gBAAMyC,UAAUC,KAAKC,SAAL,CAAe;AAC7B,mDAA8BtB,MADD;AAE7B,mDAA8BrB,SAASwC;AAFV,WAAf,CAAhB;;AAMA5B,cAAIgC,SAAJ,CAAcxB,IAAd,EAAoB;AAClB,4BAAkB,kBADA;AAElB;AACA,8BAAkB,iBAAOyB,MAAP,CAAcC,UAAd,CAAyBL,OAAzB;AAHA,WAApB;;AAMAL,kBAAQW,cAAR;;AAEA5D,cAAIU,GAAJ,CAAQY,IAAR,CAAc,KAAIW,IAAM,MAAIT,IAAIQ,MAAQ,MAAIE,MAAQ,OAAKe,QAAQA,OAAR,CAAgBV,IAAhB,CAAqBsB,QAAU,GAAxF,EAA2F;AACzF5B,gBADyF;AAEzFC,kBAFyF;AAGzFF,oBAAQR,IAAIQ,MAH6E;AAIzFe,eAJyF;AAKzFX;AALyF,WAA3F;;AAQAX,cAAIqC,GAAJ,CAAQR,OAAR;AACD,SAtCD;AAuCD,OAvFD;AAwFD;AACF,GArID;AAsID;;AAED,SAASnB,WAAT,CAAqBV,GAArB,EAA0B4B,MAA1B,EAAkC;AAChC,QAAM3D,OAAO6D,KAAKC,SAAL,CAAe;AAC1B,2EAD0B;AAE1B,2CAA8BH;AAFJ,GAAf,CAAb;;AAKA5B,MAAIgC,SAAJ,CAAc,GAAd,EAAmB;AACjB,oBAAkB,kBADD;AAEjB,qBAAkB,wCAFD;AAGjB,sBAAkB,iBAAOC,MAAP,CAAcC,UAAd,CAAyBjE,IAAzB;AAHD,GAAnB;;AAMA+B,MAAIsC,aAAJ,GAAoB,WAApB;AACAtC,MAAIqC,GAAJ,CAAQpE,IAAR;AACD","file":"listen.js","sourcesContent":["import http from 'http';\nimport jwt from 'jsonwebtoken';\nimport buffer from 'buffer';\nimport qs from 'qs';\nimport bodyParser from 'body-parser';\nimport url from 'url';\nimport makeRequest from './../../../utils/make-request';\nimport iterate from './../../../utils/iterate';\nimport {\n  SERVER_SECRET,\n  SERVER_TRANSPORT_HEADER,\n  SERVER_REQUEST_HEADER,\n  \n  SERVER_PREFIX,\n  SERVER_HOST,\n  SERVER_PORT,\n  RESPONSE_PROPERTY_STATUS,\n  RESPONSE_PROPERTY_RESULT,\n  RESPONSE_STATUS_SUCCESS,\n  RESPONSE_STATUS_ERROR\n} from './../constants';\n\nconst jsonBodyParser = bodyParser.json();\nconst urlencodedParser = bodyParser.urlencoded({ extended: false });\nconst type = 'http';\n\nconst preprocessors = [\n  jsonBodyParser,\n  urlencodedParser\n];\n\nexport default function listenHttp(app, plugin, onClose, settings = {}) {\n  return function listenHttpRoute() {\n    const server = http.createServer(handleRequest);\n    const { host = SERVER_HOST, port = SERVER_PORT } = settings;\n\n    app.log.debug('Настройки HTTP сервера', { plugin: { host, port } });\n    server.on('error', app.log.error);\n    server.on('connection', (socket) => {\n      socket.setNoDelay(); // Отключаем алгоритм Нагла.\n    });\n\n    onClose(() => new Promise((resolve, reject) => {\n      server.close((err) => {\n        if (err && err.message !== 'Not running') {\n          return reject(err);\n        }\n        app.log.info('Остановлен Node Http сервер', { plugin: { host, port } });\n        resolve();\n      });\n    }), 'unshift');\n\n    return new Promise((resolve, reject) => {\n      server.listen(port, host, (err) => {\n        if (err) {\n          return reject(err);\n        }\n        app.log.info('Запущен Node Http сервер', { plugin: { host, port } });\n        resolve();\n      });\n    });\n\n    function handleRequest(req, res, next){\n      req._originalUrl = req.url;\n      req.url = url.parse(req.url);\n      req.query = qs.parse(req.url.query);\n\n      if (req.url.pathname !== SERVER_PREFIX) {\n        app.log.info(`[404:${ req.method }:error.transport.http.listen/url.not.found]`, {\n          code  : '404',\n          status: RESPONSE_STATUS_ERROR,\n          method: req.method\n        });\n        return response404(res, 'error.transport.http.listen/url.not.found');\n      }\n\n      iterate(req.method === 'POST' ? preprocessors : [], req, res, (err) => {\n        if (err) {\n          app.log.error(err);\n          app.log.info(`[404:${ req.method }:error.transport.http.listen/preprocessors.parse]`, {\n            code  : '404',\n            status: RESPONSE_STATUS_ERROR,\n            method: req.method\n          });\n          return response404(res, 'error.transport.http.listen/preprocessors.parse');\n        }\n        const transport = {\n          type,\n          origin: req.headers[ 'user-agent' ],\n          method: req.method,\n          time  : Date.now()\n        };\n        \n        if (SERVER_TRANSPORT_HEADER in req.headers) {\n          Object.assign(transport, jwt.verify(req.headers[ SERVER_TRANSPORT_HEADER ], SERVER_SECRET).transport);\n        }\n        \n        transport.trace = [\n          ...(transport.trace || []),\n          app.name\n        ];\n        \n        const pin = {\n          ...(req.body || {}),\n          ...req.query\n        };\n        const request = makeRequest(app, {\n          transport,\n          request: (SERVER_REQUEST_HEADER in req.headers)\n            ? jwt.verify(req.headers[ SERVER_REQUEST_HEADER ], SERVER_SECRET).request\n            : null,\n          ...pin\n        });\n\n        if (pin.role === 'plugin') {\n          app.log.warn(`Вызов приватного метода`, { pin, transport });\n          app.log.info(`[404:${ req.method }:error.transport.http.listen/call.private.method]`, {\n            code  : '404',\n            status: RESPONSE_STATUS_ERROR,\n            method: req.method\n          });\n          return response404(res, {});\n        }\n\n        app.act(request, (error, result) => {\n          if (!!error && error.code === 'error.common/act.not.found') {\n            app.log.info(`[404:${ req.method }:error.transport.http.listen/act.not.found]`, {\n              code  : '404',\n              status: RESPONSE_STATUS_ERROR,\n              method: req.method,\n              pin,\n              transport\n            });\n            return response404(res, error);\n          }\n\n          const code = error ? 500 : 200;\n          const status = error ? RESPONSE_STATUS_ERROR : RESPONSE_STATUS_SUCCESS;\n\n          const outJson = JSON.stringify({\n            [ RESPONSE_PROPERTY_STATUS ]: status,\n            [ RESPONSE_PROPERTY_RESULT ]: error || result\n          });\n\n\n          res.writeHead(code, {\n            'Content-Type'  : 'application/json',\n            // 'Cache-Control' : 'private, max-age=0, no-cache, no-store',\n            'Content-Length': buffer.Buffer.byteLength(outJson)\n          });\n  \n          request.updateDuration();\n          \n          app.log.info(`[${ code }:${ req.method }:${ status }] ${ request.request.time.duration }`, {\n            code,\n            status,\n            method: req.method,\n            pin,\n            transport\n          });\n\n          res.end(outJson);\n        });\n      });\n    }\n  };\n}\n\nfunction response404(res, result) {\n  const json = JSON.stringify({\n    [ RESPONSE_PROPERTY_STATUS ]: RESPONSE_STATUS_ERROR,\n    [ RESPONSE_PROPERTY_RESULT ]: result\n  });\n\n  res.writeHead(404, {\n    'Content-Type'  : 'application/json',\n    'Cache-Control' : 'private, max-age=0, no-cache, no-store',\n    'Content-Length': buffer.Buffer.byteLength(json)\n  });\n\n  res.statusMessage = 'Not found';\n  res.end(json);\n}"]}