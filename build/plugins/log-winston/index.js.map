{"version":3,"sources":["../../../src/plugins/log-winston/index.js"],"names":["level","settings","micro","onClose","plugin","id","logger","Logger","log","levels","LEVELS","has","add","transports","Elasticsearch","get","Console","label","emit","on","message","payload"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;kBAEe,YAAiC;AAAA,iFAAP,EAAO;;AAAA,MAA9BA,KAA8B,QAA9BA,KAA8B;AAAA,MAApBC,QAAoB;;AAC9C,SAAO,CAACC,KAAD,YAAwB;AAAA,QAAdC,OAAc,SAAdA,OAAc;;AAC7B,UAAMC,SAAS,EAAEC,IAAI,sBAAN,EAAf;;AAEA,QAAIC,SAAS,IAAK,kBAAQC,MAAb;AACXP,aAAQA,SAASE,MAAMM,GAAN,CAAUR,KADhB;AAEXS,cAAQP,MAAMM,GAAN,CAAUE;AAFP,OAGRT,QAHQ,EAAb;;AAMA,QAAI,iBAAOU,GAAP,CAAW,+BAAX,CAAJ,EAAiD;AAC/CL,aAAOM,GAAP,CAAW,kBAAQC,UAAR,CAAmBC,aAA9B;AACEN,aAAKR,SAASE,MAAMM,GAAN,CAAUR;AAD1B,SAEK,iBAAOe,GAAP,CAAW,+BAAX,CAFL;AAID,KALD,MAKO;AACLT,aAAOM,GAAP,CAAW,kBAAQC,UAAR,CAAmBG,OAA9B,EAAwC;AACtCC,eAAOf,MAAMG;AADyB,OAAxC;AAGD;;AAEDH,UAAMgB,IAAN,CAAW,mBAAX;AACAhB,UAAMiB,EAAN,CAAS,KAAT,EAAgB;AAAA,UAAGnB,KAAH,SAAGA,KAAH;AAAA,UAAUoB,OAAV,SAAUA,OAAV;AAAA,UAAmBC,OAAnB,SAAmBA,OAAnB;AAAA,aAAiCf,OAAQN,KAAR,EAAgBoB,OAAhB,EAAyBC,OAAzB,CAAjC;AAAA,KAAhB;;AAEA,WAAOjB,MAAP;AACD,GAxBD;AAyBD,C","file":"index.js","sourcesContent":["import config from 'config';\nimport winston from 'winston';\nimport 'winston-elasticsearch';\nimport genid from './../../utils/genid';\n\nexport default ({ level, ...settings } = {}) => {\n  return (micro, { onClose }) => {\n    const plugin = { id: genid() };\n\n    let logger = new (winston.Logger)({\n      level : level || micro.log.level,\n      levels: micro.log.LEVELS,\n      ...settings\n    });\n\n    if (config.has('plugins.winston-elasticsearch')) {\n      logger.add(winston.transports.Elasticsearch, {\n        log: level || micro.log.level,\n        ...config.get('plugins.winston-elasticsearch')\n      });\n    } else {\n      logger.add(winston.transports.Console, ({\n        label: micro.id\n      }));\n    }\n\n    micro.emit('plugin.logger.use');\n    micro.on('log', ({ level, message, payload }) => logger[ level ](message, payload));\n\n    return plugin;\n  }\n};"]}