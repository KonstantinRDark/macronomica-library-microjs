{"version":3,"sources":["../../../src/plugins/api-fetch/index.js"],"names":["ApiFetchPlugin","clientsSettings","app","name","settings","id","onClose","add","role","cmd","resolve","log","info"],"mappings":";;;;;;;;;;;;;;kBAOwBA,c;;AAPxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,MAAMC,kBAAkB,EAAxB;;AAEe,SAASD,cAAT,CAAwBE,GAAxB,EAA2D;AAAA,iFAAJ,EAAI;;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,2BAAtBC,QAAsB;AAAA,MAAtBA,QAAsB,iCAAX,EAAW;;AACxEH,kBAAiBC,IAAIG,EAArB,IAA4BJ,gBAAiBC,IAAIG,EAArB,KAA6B,EAAzD;AACAJ,kBAAiBC,IAAIG,EAArB,EAA2BF,IAA3B,IAAoC,6BAClCD,GADkC,EAC7BC,IAD6B,EAElC,yBAAU,+BAAgBD,GAAhB,EAAqBC,IAArB,CAAV,EAAsCC,QAAtC,CAFkC,CAApC;;AAKA,SAAO,CAACF,GAAD,YAAsB;AAAA,QAAdI,OAAc,SAAdA,OAAc;;;AAE3BJ,QAAIK,GAAJ,CAAQ,EAAEC,MAAM,QAAR,EAAkBC,KAAK,SAAvB,EAAR,EAA4C,MAC1C,kBAAQC,OAAR,CAAgB,oBAAYT,gBAAiBC,IAAIG,EAArB,CAAZ,CAAhB,CADF;;AAGA,QAAID,WAAW,EAAED,IAAF,EAAQC,UAAUH,gBAAiBC,IAAIG,EAArB,EAA2BF,IAA3B,CAAlB,EAAf;;AAEAD,QAAIS,GAAJ,CAAQC,IAAR,CAAc,0BAA0BT,IAAM,EAA9C,EAAiDC,QAAjD;AACAF,QAAIK,GAAJ,CAAS,OAAOJ,IAAM,EAAtB,EAAyB,qBAAMD,GAAN,EAAWE,QAAX,CAAzB;;AAEAE,YAAQ,MAAM;AACZ,UAAI,sBAAcL,gBAAiBC,IAAIG,EAArB,EAA2BF,IAA3B,CAAd,CAAJ,EAAsD;AACpD,eAAOF,gBAAiBC,IAAIG,EAArB,EAA2BF,IAA3B,CAAP;AACD;AACF,KAJD;AAKD,GAfD;AAgBD","file":"index.js","sourcesContent":["import deepmerge from 'deepmerge'\nimport isPlainObject from 'lodash.isplainobject'\nimport fetch from './methods/fetch'\nimport parseSettings from './utils/parse-settings'\nimport getClientConfig from './utils/get-client-config'\nconst clientsSettings = {};\n\nexport default function ApiFetchPlugin(app, { name, settings = {} } = {}) {\n  clientsSettings[ app.id ] = clientsSettings[ app.id ] || {};\n  clientsSettings[ app.id ][ name ] = parseSettings(\n    app, name,\n    deepmerge(getClientConfig(app, name), settings)\n  );\n\n  return (app, { onClose }) => {\n\n    app.add({ role: 'plugin', cmd: 'clients' }, () =>\n      Promise.resolve(Object.keys(clientsSettings[ app.id ])));\n\n    let settings = { name, settings: clientsSettings[ app.id ][ name ] };\n\n    app.log.info(`microjs.common.api-add.${ name }`, settings);\n    app.add(`api:${ name }`, fetch(app, settings));\n\n    onClose(() => {\n      if (isPlainObject(clientsSettings[ app.id ][ name ])) {\n        delete clientsSettings[ app.id ][ name ];\n      }\n    });\n  };\n}"]}