{"version":3,"sources":["../../../src/plugins/api-fetch/index.js"],"names":["ApiFetchPlugin","name","settings","microjs","onClose","apiPin","executeApi","add","del","Promise","resolve","reject"],"mappings":";;;;;;;;kBAEwBA,c;;AAFxB;;;;;;;;AAEe,SAASA,cAAT,GAAoD;AAAA,iFAAJ,EAAI;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAAjBC,QAAiB;;AACjE,SAAO,UAACC,OAAD,SAA0B;AAAA,QAAdC,OAAc,SAAdA,OAAc;;AAC/B,QAAMC,kBAAiBJ,IAAvB;AACA,QAAMK,aAAa,qBAAMH,OAAN,aAAiBF,UAAjB,IAA0BC,QAA1B,EAAnB;;AAEAC,YAAQI,GAAR,CAAYF,MAAZ,EAAoBC,UAApB;;AAEAF,YAAQ;AAAA,aAAMD,QAAQK,GAAR,CAAYH,MAAZ,CAAN;AAAA,KAAR;;AAEA,WAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB,CAEvC,CAFM,CAAP;AAGD,GAXD;AAYD","file":"index.js","sourcesContent":["import fetch from './methods/fetch'\n\nexport default function ApiFetchPlugin({ name, ...settings } = {}) {\n  return (microjs, { onClose }) => {\n    const apiPin = `api:${ name }`;\n    const executeApi = fetch(microjs, { name, ...settings });\n\n    microjs.add(apiPin, executeApi);\n\n    onClose(() => microjs.del(apiPin));\n\n    return new Promise((resolve, reject) => {\n\n    });\n  };\n}"]}