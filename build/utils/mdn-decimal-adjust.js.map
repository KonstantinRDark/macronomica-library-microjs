{"version":3,"sources":["../../src/utils/mdn-decimal-adjust.js"],"names":["round","floor","ceil","decimalAdjust","type","value","exp","Math","isNaN","NaN","toString","split"],"mappings":";;;;;QA4BgBA,K,GAAAA,K;QAKAC,K,GAAAA,K;QAKAC,I,GAAAA,I;AAtChB;;;;;;;;AAQA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,GAApC,EAAyC;AACvC;AACA,MAAI,OAAOA,GAAP,KAAe,WAAf,IAA8B,CAACA,GAAD,KAAS,CAA3C,EAA8C;AAC5C,WAAOC,KAAMH,IAAN,EAAaC,KAAb,CAAP;AACD;AACDA,UAAQ,CAACA,KAAT;AACAC,QAAM,CAACA,GAAP;AACA;AACA,MAAIE,MAAMH,KAAN,KAAgB,EAAE,OAAOC,GAAP,KAAe,QAAf,IAA2BA,MAAM,CAAN,KAAY,CAAzC,CAApB,EAAiE;AAC/D,WAAOG,GAAP;AACD;AACD;AACAJ,UAAQA,MAAMK,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR;AACAN,UAAQE,KAAMH,IAAN,EAAa,EAAEC,MAAO,CAAP,IAAa,GAAb,IAAoBA,MAAO,CAAP,IAAc,CAACA,MAAO,CAAP,CAAD,GAAcC,GAA5B,GAAmC,CAACA,GAAxD,CAAF,CAAb,CAAR;AACA;AACAD,UAAQA,MAAMK,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR;AACA,SAAO,EAAEN,MAAO,CAAP,IAAa,GAAb,IAAoBA,MAAO,CAAP,IAAc,CAACA,MAAO,CAAP,CAAD,GAAcC,GAA5B,GAAmCA,GAAvD,CAAF,CAAP;AACD;;AAED;AACO,SAASN,KAAT,CAAeK,KAAf,EAAsBC,GAAtB,EAA2B;AAChC,SAAOH,cAAc,OAAd,EAAuBE,KAAvB,EAA8BC,GAA9B,CAAP;AACD;;AAED;AACO,SAASL,KAAT,CAAeI,KAAf,EAAsBC,GAAtB,EAA2B;AAChC,SAAOH,cAAc,OAAd,EAAuBE,KAAvB,EAA8BC,GAA9B,CAAP;AACD;;AAED;AACO,SAASJ,IAAT,CAAcG,KAAd,EAAqBC,GAArB,EAA0B;AAC/B,SAAOH,cAAc,MAAd,EAAsBE,KAAtB,EAA6BC,GAA7B,CAAP;AACD","file":"mdn-decimal-adjust.js","sourcesContent":["/**\n * Корректировка округления десятичных дробей.\n *\n * @param {String}  type  Тип корректировки.\n * @param {Number}  value Число.\n * @param {Integer} exp   Показатель степени (десятичный логарифм основания корректировки).\n * @returns {Number} Скорректированное значение.\n */\nfunction decimalAdjust(type, value, exp) {\n  // Если степень не определена, либо равна нулю...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[ type ](value);\n  }\n  value = +value;\n  exp = +exp;\n  // Если значение не является числом, либо степень не является целым числом...\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Сдвиг разрядов\n  value = value.toString().split('e');\n  value = Math[ type ](+(value[ 0 ] + 'e' + (value[ 1 ] ? (+value[ 1 ] - exp) : -exp)));\n  // Обратный сдвиг\n  value = value.toString().split('e');\n  return +(value[ 0 ] + 'e' + (value[ 1 ] ? (+value[ 1 ] + exp) : exp));\n}\n\n// Десятичное округление к ближайшему\nexport function round(value, exp) {\n  return decimalAdjust('round', value, exp);\n}\n\n// Десятичное округление вниз\nexport function floor(value, exp) {\n  return decimalAdjust('floor', value, exp);\n}\n\n// Десятичное округление вверх\nexport function ceil(value, exp) {\n  return decimalAdjust('ceil', value, exp);\n}"]}