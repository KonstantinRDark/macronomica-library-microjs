{"version":3,"sources":["../../src/utils/iterate.js"],"names":["raw","args","iterate","Symbol","iterator","preprocessor","next","done","value","err"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,GAAD;AAAA,oCAASC,IAAT;AAASA,QAAT;AAAA;;AAAA,SAAkBC,QAAQF,IAAKG,OAAOC,QAAZ,GAAR,EAAkC,GAAGH,IAArC,CAAlB;AAAA,C;;AAEf,SAASC,OAAT,CAAiBE,QAAjB,EAAoC;AAAA,qCAANH,IAAM;AAANA,QAAM;AAAA;;AAClC,QAAMI,eAAeD,SAASE,IAAT,EAArB;AACA,MAAIA,OAAO,+BAAgBL,IAAhB,CAAX;;AAEA,MAAII,aAAaE,IAAjB,EAAuB;AACrB,WAAOD,MAAP;AACD;;AAEDD,eAAaG,KAAb,CAAmB,GAAGP,IAAtB,EAA4B,UAAUQ,GAAV,EAAe;AACzC,QAAIA,GAAJ,EAAS;AACP,aAAOH,KAAKG,GAAL,CAAP;AACD;AACDP,YAAQE,QAAR,EAAkB,GAAGH,IAArB,EAA2BK,IAA3B;AACD,GALD;AAMD","file":"iterate.js","sourcesContent":["import getNextCallback from './get-next-callback';\n\nexport default (raw, ...args) => iterate(raw[ Symbol.iterator ](), ...args);\n\nfunction iterate(iterator, ...args) {\n  const preprocessor = iterator.next();\n  let next = getNextCallback(args);\n  \n  if (preprocessor.done) {\n    return next();\n  }\n  \n  preprocessor.value(...args, function (err) {\n    if (err) {\n      return next(err);\n    }\n    iterate(iterator, ...args, next);\n  });\n}"]}