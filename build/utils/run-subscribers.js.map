{"version":3,"sources":["../../src/utils/run-subscribers.js"],"names":["runSubscribers","InternalError","message","type","microjs","subscribers","getPromise","resolve","reject","q","concurrency","forEach","subscriber","push","callback","promise","then","error","console","log","jobs","length"],"mappings":";;;;;;;;;;kBAQwBA,c;;AARxB;;;;AACA;;;;;;AAEA,MAAMC,gBAAgB,uBAAa;AACjCC,WAAS,wBADwB;AAEjCC,QAAS;AAFwB,CAAb,CAAtB;;AAKe,SAASH,cAAT,CAAwBI,OAAxB,EAAiCC,WAAjC,EAA8CC,UAA9C,EAA0D;AACvE,SAAO,sBAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,IAAI,oBAAW,EAAEC,aAAa,CAAf,EAAX,CAAR;;AAEAL,gBAAYM,OAAZ,CAAoBC,cAAcH,EAAEI,IAAF,CAChCC,YAAY;AACV,UAAIC,UAAUT,WAAWM,UAAX,CAAd;;AAEA,UAAI,CAACG,OAAD,IAAY,OAAOA,QAAQC,IAAf,KAAwB,UAAxC,EAAoD;AAClDD,kBAAU,kBAAQR,OAAR,CAAgBQ,OAAhB,CAAV;AACD;;AAEDA,cAAQC,IAAR,CAAa,MAAMF,UAAnB,EAA+BA,QAA/B;AACD,KAT+B,EAU/BG,KAAD,IAAW;AACTC,cAAQC,GAAR,CAAY,MAAZ,EAAoBF,KAApB,EAA2BR,EAAEW,IAAF,CAAOC,MAAlC;;AAEA,UAAIJ,KAAJ,EAAW;AACTT,eAAOP,cAAcgB,KAAd,CAAP;AACD,OAFD,MAEO,IAAI,CAACR,EAAEW,IAAF,CAAOC,MAAZ,EAAmB;AACxBd;AACD;AACF,KAlB+B,CAAlC;AAoBD,GAvBM,CAAP;AAwBD","file":"run-subscribers.js","sourcesContent":["import WrappedError from 'error/wrapped';\nimport Queue3 from 'queue3';\n\nconst InternalError = WrappedError({\n  message: '{name} - {origMessage}',\n  type   : 'micro.utils.run-subscribers.internal'\n});\n\nexport default function runSubscribers(microjs, subscribers, getPromise) {\n  return new Promise((resolve, reject) => {\n    let q = new Queue3({ concurrency: 1 });\n\n    subscribers.forEach(subscriber => q.push(\n      callback => {\n        let promise = getPromise(subscriber);\n\n        if (!promise || typeof promise.then !== 'function') {\n          promise = Promise.resolve(promise);\n        }\n\n        promise.then(() => callback(), callback);\n      },\n      (error) => {\n        console.log('exec', error, q.jobs.length);\n\n        if (error) {\n          reject(InternalError(error));\n        } else if (!q.jobs.length){\n          resolve();\n        }\n      }\n    ));\n  });\n}"]}