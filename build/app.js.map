{"version":3,"sources":["../src/app.js"],"names":["Microjs","constructor","settings","id","state","manager","gex","defaultTransportPlugin","defaultLogPlugin","modules","subscribers","run","add","end","time","started","Date","now","running","log","use","del","api","act","initialize","on","onRunning","process","app","level","plugins","maxListeners","defaultMaxListeners","setMaxListeners","Object","assign","Array","isArray","forEach","plugin","module","info"],"mappings":"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","file":"app.js","sourcesContent":["import EventEmitter from 'events';\nimport Patrun from 'patrun';\n\nimport genid from './utils/genid';\nimport dateIsoString from './utils/date-iso-string';\n\nimport WinstonLogPlugin from './plugins/log-winston';\nimport NodeHttpPlugin from './plugins/node-http';\n\nimport HealthCheckModule from './modules/health-check';\n\nimport log from './methods/log';\nimport use from './methods/use';\nimport add from './methods/add';\nimport del from './methods/del';\nimport act from './methods/act';\nimport api from './methods/api';\nimport end from './methods/end';\nimport run from './methods/run';\n\nimport { STATE_START, STATE_RUN } from './constants';\n\n/**\n * @namespace app\n * @class Microjs\n * @augments EventEmitter\n */\nexport default class Microjs extends EventEmitter {\n  /**\n   * @namespace app\n   * @memberof app.on\n   */\n  /**\n   * @namespace app\n   * @memberof app.emit\n   */\n\n  /**\n   * @namespace app.id\n   * @type {string}\n   */\n  id = genid();\n\n  /**\n   * @namespace app.state\n   * @type {string}\n   */\n  state = STATE_START;\n\n  /**\n   * @namespace app.manager\n   * @type {object}\n   */\n  manager = Patrun({ gex: true });\n\n  /**\n   * Плагин транспорта по умолчанию\n   * @namespace app.defaultTransportPlugin\n   * @type {function}\n   */\n  defaultTransportPlugin = NodeHttpPlugin;\n\n  /**\n   * Плагин логгера по умолчанию\n   * @namespace app.defaultLogPlugin\n   * @type {function}\n   */\n  defaultLogPlugin = WinstonLogPlugin;\n\n  /**\n   * Список модулей для инициализации\n   * @namespace app.modules\n   * @type {Array<function>}\n   */\n  modules = [\n    HealthCheckModule()\n  ];\n\n  /**\n   * Список подписчиков\n   * @namespace app.subscribers\n   * @type {{ run: Array<function>, add: Array<function>, end: Array<function> }}\n   */\n  subscribers = {\n    run: [],      // подписчики для этапа запуска работы\n    add: [],      // подписчики для этапа регистрации действий\n    end: []       // подписчики для этапа завершения работы\n  };\n\n  /**\n   * Метрики времени\n   * @namespace app.time\n   * @type {{ started: number, running: ?number }}\n   */\n  time = {\n    started: Date.now(),\n    running: null\n  };\n\n  /**\n   * @this app\n   * @param settings\n   */\n  constructor(settings = {}) {\n    super();\n    initialize(this, settings);\n    this.on('running', onRunning);\n    process.on('SIGINT', this.end);\n  }\n\n  log = log(this);\n  use = use(this);\n  add = add(this);\n  del = del(this);\n  api = api(this);\n  act = act(this);\n  end = end(this);\n  run = run(this);\n}\n\n/**\n * @param {app} app\n * @param {object} settings\n */\nfunction initialize(app, settings) {\n  const {\n    id = app.id,\n    level = app.log.level,\n    plugins = [],\n    modules = app.modules,\n    maxListeners = EventEmitter.defaultMaxListeners\n  } = settings;\n\n  app.log.level = level;\n  app.setMaxListeners(maxListeners);\n\n  Object.assign(app, { id, settings });\n\n  app.use(app.defaultLogPlugin({ level }));\n\n  if (Array.isArray(plugins)) {\n    plugins.forEach(plugin => app.use(plugin));\n  }\n\n  if (Array.isArray(modules)) {\n    modules.forEach(module => app.use(module));\n  }\n}\n\nfunction onRunning(app) {\n  app.state = STATE_RUN;\n  app.time.running = Date.now();\n  app.log.info([\n    '============================ app-running ===========================',\n    '# Instance Id: ' + app.id,\n    `# Started At : ${ dateIsoString(app.time.started) }`,\n    `# Running At : ${ dateIsoString(app.time.running) }`,\n    '========================== app-running-end =========================',\n  ]);\n}"]}