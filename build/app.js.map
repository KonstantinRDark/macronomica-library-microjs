{"version":3,"sources":["../src/app.js"],"names":["STATE_INIT","STATE_WAIT","STATE_RUN","STATE_END","Microjs","constructor","settings","state","manager","gex","subscribers","run","end","log","use","add","del","api","act","id","maxListeners","defaultMaxListeners","setMaxListeners"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,MAAMA,aAAa,MAAnB;AACA,MAAMC,aAAa,MAAnB;AACA,MAAMC,YAAY,KAAlB;AACA,MAAMC,YAAY,KAAlB;;AAEA;;;;;AAKe,MAAMC,OAAN,0BAAmC;AAehD;;;;AAeAC,gBAA2B;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AACzB;AADyB,SAhB3BC,KAgB2B,GAhBnBP,UAgBmB;AAAA,SAX3BQ,OAW2B,GAXjB,sBAAO,EAAEC,KAAK,IAAP,EAAP,CAWiB;AAAA,SAL3BC,WAK2B,GALb;AACZC,WAAK,EADO,EACE;AACdC,WAAK,EAFO,CAEE;AAFF,KAKa;AAAA,SAY3BC,GAZ2B,GAYrB,mBAAI,IAAJ,CAZqB;AAAA,SAa3BC,GAb2B,GAarB,mBAAI,IAAJ,CAbqB;AAAA,SAc3BC,GAd2B,GAcrB,mBAAI,IAAJ,CAdqB;AAAA,SAe3BC,GAf2B,GAerB,mBAAI,IAAJ,CAfqB;AAAA,SAgB3BC,GAhB2B,GAgBrB,mBAAI,IAAJ,CAhBqB;AAAA,SAiB3BC,GAjB2B,GAiBrB,mBAAI,IAAJ,CAjBqB;AAAA,SAkB3BN,GAlB2B,GAkBrB,mBAAI,IAAJ,CAlBqB;AAAA,SAmB3BD,GAnB2B,GAmBrB,mBAAI,IAAJ,CAnBqB;AAAA,uBAKrBL,QALqB,CAGvBa,EAHuB;AAAA,UAGvBA,EAHuB,gCAGlB,sBAHkB;AAAA,gCAKrBb,QALqB,CAIvBc,YAJuB;AAAA,UAIvBA,YAJuB,yCAIR,iBAAaC,mBAJL;;;AAOzB,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKb,QAAL,GAAgBA,QAAhB;AACA,SAAKgB,eAAL,CAAqBF,YAArB;AACD;AApBD;;;;;;AAnBA;;;;AAIA;;;;;AAKA;;;;AAVgD;kBAA7BhB,O","file":"app.js","sourcesContent":["import EventEmitter from 'events';\nimport Patrun from 'patrun';\n\nimport genid from './utils/genid';\n\nimport log from './methods/log';\nimport use from './methods/use';\nimport add from './methods/add';\nimport del from './methods/del';\nimport act from './methods/act';\nimport api from './methods/api';\nimport end from './methods/end';\nimport run from './methods/run';\n\n// Статус блокирует\nconst STATE_INIT = 'init';\nconst STATE_WAIT = 'wait';\nconst STATE_RUN = 'run';\nconst STATE_END = 'run';\n\n/**\n * @namespace app\n * @class Microjs\n * @augments EventEmitter\n */\nexport default class Microjs extends EventEmitter {\n  /**\n   * @namespace app\n   * @memberof app.on\n   */\n  /**\n   * @namespace app\n   * @memberof app.emit\n   */\n\n  /**\n   * @namespace app.state\n   * @type {string}\n   */\n  state = STATE_INIT;\n  /**\n   * @namespace app.manager\n   * @type {object}\n   */\n  manager = Patrun({ gex: true });\n  /**\n   * Список подписчиков\n   * @namespace app.subscribers\n   * @type {{ run: Array<function>, end: Array<function> }}\n   */\n  subscribers = {\n    run: [],      // подписчики для этапа запуска работы\n    end: []       // подписчики для этапа завершения работы\n  };\n\n  constructor(settings = {}) {\n    super();\n    const {\n      id = genid(),\n      maxListeners = EventEmitter.defaultMaxListeners\n    } = settings;\n\n    this.id = id;\n    this.settings = settings;\n    this.setMaxListeners(maxListeners);\n  }\n\n  log = log(this);\n  use = use(this);\n  add = add(this);\n  del = del(this);\n  api = api(this);\n  act = act(this);\n  end = end(this);\n  run = run(this);\n}"]}