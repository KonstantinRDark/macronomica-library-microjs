{"version":3,"sources":["../../../src/libs/act/act-proxy-client-exec.js"],"names":["actProxyClientExec","micro","request","client","name","api","Proxy","get","target","property","_original","args"],"mappings":";;;;;;;;kBAEwBA,kB;;AAFxB;;;;;;AAEe,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,OAAnC,EAA4C;AACzD,sBACKD,KADL;AAEEE,YAAQ,gBAACC,IAAD,EAAU;AAChB,UAAIC,MAAMJ,MAAME,MAAN,CAAaC,IAAb,CAAV;;AAEA,UAAI,sBAASA,IAAT,CAAJ,EAAoB;AAClBC,cAAM,IAAIC,KAAJ,CAAUD,GAAV,EAAe;AACnBE,aADmB,eACfC,MADe,EACPC,QADO,EACG;AACpB,gBAAMC,YAAYF,OAAQC,QAAR,CAAlB;AACA,mBAAO;AAAA,gDAAIE,IAAJ;AAAIA,oBAAJ;AAAA;;AAAA,qBAAaD,2BAAaC,IAAb,SAAmB,EAAET,gBAAF,EAAnB,GAAb;AAAA,aAAP;AACD;AAJkB,SAAf,CAAN;AAMD;;AAED,aAAOG,GAAP;AACD;AAfH;AAiBD","file":"act-proxy-client-exec.js","sourcesContent":["import isString from 'lodash.isstring';\n\nexport default function actProxyClientExec(micro, request) {\n  return {\n    ...micro,\n    client: (name) => {\n      let api = micro.client(name);\n\n      if (isString(name)) {\n        api = new Proxy(api, {\n          get(target, property) {\n            const _original = target[ property ];\n            return (...args) => _original(...args, { request });\n          }\n        });\n      }\n\n      return api;\n    }\n  };\n}"]}