{"version":3,"sources":["../../src/libs/listen.js"],"names":["micro","transportOptions","type","pluginTransport","plugin","error","Error","join","code","details","options","die","listen","api"],"mappings":";;;;;;AAAA;;AAEA;kBACe,UAACA,KAAD,EAAQC,gBAAR,EAA6B;AAAA,MAClCC,IADkC,GACzBD,gBADyB,CAClCC,IADkC;;AAE1C,MAAMC,kBAAkBH,MAAMI,MAAN,CAAaF,IAAb,CAAxB;;AAEA,MAAI,CAACC,eAAL,EAAsB;AACpB,QAAME,QAAQ,IAAIC,KAAJ,CAAU,8DACPJ,IADO,oSAEkB,8BAAmBK,IAAnB,CAAwB,MAAxB,CAFlB,UAGtBA,IAHsB,CAGjB,IAHiB,CAAV,CAAd;AAIAF,UAAMG,IAAN;AACAH,UAAMI,OAAN,GAAgB,EAAEC,SAAST,gBAAX,EAAhB;AACA,WAAOD,MAAMW,GAAN,CAAUN,KAAV,CAAP;AACD;;AAEDF,kBAAgBS,MAAhB,CAAuBX,gBAAvB;;AAEA,SAAOD,MAAMa,GAAb;AACD,C","file":"listen.js","sourcesContent":["import {TRANSPORT_SUPPORTS} from './client/constants';\n\n// Запускает прослушку транспорта\nexport default (micro, transportOptions) => {\n  const { type } = transportOptions;\n  const pluginTransport = micro.plugin(type);\n\n  if (!pluginTransport) {\n    const error = new Error([\n      `Транспорт \"${ type }\" не поддерживается`,\n      `Поддерживаемые типы транспортов: [ \"${ TRANSPORT_SUPPORTS.join('\", \"') }\" ]`\n    ].join('. '));\n    error.code = `error.listen/type.not.available`;\n    error.details = { options: transportOptions };\n    return micro.die(error);\n  }\n\n  pluginTransport.listen(transportOptions);\n\n  return micro.api;\n};"]}