{"version":3,"sources":["../../src/tests/act-errors.spec.js"],"names":["should","innerTimeout","micro","level","before","add","request","test","resolve","reject","error","message","type","userId","setTimeout","run","after","end","describe","it","act","catch","equal","cmd","timeout"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,MAAMA,SAAS,eAAKA,MAAL,EAAf;AACA,MAAMC,eAAe,GAArB;AACA,MAAMC,QAAQ,gBAAM,EAAEC,kBAAF,EAAN,CAAd;;AAEAC,OAAO,MAAMF,MACVG,GADU,CACN,wBADM,EACoBC,WAAW;AACxCA,UAAQC,IAAR,CAAaA,IAAb;AACD,CAHU,EAIVF,GAJU,CAIN,qBAJM,EAIiBC,WAAW,sBAAY,CAACE,OAAD,EAAUC,MAAV,KAAqB;AACtE,QAAMC,QAAQ,qBAAW;AACvBC,aAAS,iCADc;AAEvBC,UAAS,gBAFc;AAGvBC,YAAS;AAHc,GAAX,CAAd;;AAMAJ,SAAOC,MAAM,EAAEG,QAAQ,CAAV,EAAN,CAAP;AACD,CARsC,CAJ5B,EAaVR,GAbU,CAaN,6BAbM,EAayBC,WAAW,sBAAY,CAACE,OAAD,EAAUC,MAAV,KAAqB;AAC9EK,aAAW,MAAMN,SAAjB,EAA4BP,eAAe,EAA3C;AACD,CAF8C,CAbpC,EAgBVI,GAhBU,CAgBN,uBAhBM,EAgBmBC,WAAW,sBAAY,CAACE,OAAD,EAAUC,MAAV,KAAqB;AACxEK,aAAW,MAAMN,SAAjB,EAA4B,yBAAc,EAA1C;AACD,CAFwC,CAhB9B,EAmBVO,GAnBU,EAAb;AAqBAC,MAAM,MAAMd,MAAMe,GAAN,EAAZ;;AAEAC,SAAS,YAAT,EAAuB,YAAW;;AAEhCC,KAAG,sBAAH,EAA2B,MAAMjB,MAC9BkB,GAD8B,CAC1B,yBAD0B,EAE9BC,KAF8B,CAExBX,SAASA,MAAME,IAAN,CAAWZ,MAAX,CAAkBsB,KAAlB,CAAyB,qBAAzB,CAFe,CAAjC;;AAKAH,KAAG,gCAAH,EAAqC,MAAMjB,MACxCkB,GADwC,CACpC,wBADoC,EAExCC,KAFwC,CAElCX,SAASA,MAAME,IAAN,CAAWZ,MAAX,CAAkBsB,KAAlB,CAAyB,oBAAzB,CAFyB,CAA3C;;AAKAH,KAAG,cAAH,EAAmB,MAAMjB,MACtBkB,GADsB,CAClB,qBADkB,EAEtBC,KAFsB,CAEhBX,SAASA,MAAME,IAAN,CAAWZ,MAAX,CAAkBsB,KAAlB,CAAyB,gBAAzB,CAFO,CAAzB;;AAKAH,KAAG,+BAAH,EAAoC,MAAMjB,MACrCkB,GADqC,CACjC,EAAEG,KAAK,mBAAP,EADiC,EAErCF,KAFqC,CAE/BX,SAASA,MAAME,IAAN,CAAWZ,MAAX,CAAkBsB,KAAlB,CAAyB,mBAAzB,CAFsB,CAA1C;;AAKAH,KAAG,uBAAH,EAA4B,MAAMjB,MAC7BkB,GAD6B,CACzB,EAAEG,KAAK,yBAAP,EAAkCC,SAASvB,YAA3C,EADyB,EAE7BoB,KAF6B,CAEvBX,SAASA,MAAME,IAAN,CAAWZ,MAAX,CAAkBsB,KAAlB,CAAyB,mBAAzB,CAFc,CAAlC;AAKD,CA3BD","file":"act-errors.spec.js","sourcesContent":["import TypedError from 'error/typed';\nimport chai from 'chai';\nimport Micro, { LEVEL_OFF, LEVEL_WARN } from '../';\nimport { ACT_TIMEOUT } from '../constants';\n\nconst should = chai.should();\nconst innerTimeout = 100;\nconst micro = Micro({ level: LEVEL_OFF });\n\nbefore(() => micro\n  .add('cmd:act-internal-error', request => {\n    request.test.test;\n  })\n  .add('cmd:act-catch-error', request => new Promise((resolve, reject) => {\n    const error = TypedError({\n      message: '{name}: User {userId} not found',\n      type   : 'user.not.found',\n      userId : null\n    });\n\n    reject(error({ userId: 1 }));\n  }))\n  .add('cmd:act-timeout-inner-error', request => new Promise((resolve, reject) => {\n    setTimeout(() => resolve(), innerTimeout + 10);\n  }))\n  .add('cmd:act-timeout-error', request => new Promise((resolve, reject) => {\n    setTimeout(() => resolve(), ACT_TIMEOUT + 10);\n  }))\n  .run()\n);\nafter(() => micro.end());\n\ndescribe('act-errors', function() {\n\n  it('#act not found error', () => micro\n    .act('cmd:act-not-found-error')\n    .catch(error => error.type.should.equal(`micro.act.not.found`))\n  );\n\n  it('#throw error as internal error', () => micro\n    .act('cmd:act-internal-error')\n    .catch(error => error.type.should.equal(`micro.act.internal`))\n  );\n\n  it('#catch error', () => micro\n    .act('cmd:act-catch-error')\n    .catch(error => error.type.should.equal(`user.not.found`))\n  );\n\n  it('#timeout error to ACT_TIMEOUT', () => micro\n      .act({ cmd: 'act-timeout-error' })\n      .catch(error => error.type.should.equal(`micro.act.timeout`))\n  );\n\n  it('#timeout error to act', () => micro\n      .act({ cmd: 'act-timeout-inner-error', timeout: innerTimeout })\n      .catch(error => error.type.should.equal(`micro.act.timeout`))\n  );\n\n});"]}