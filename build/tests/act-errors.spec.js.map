{"version":3,"sources":["../../src/tests/act-errors.spec.js"],"names":["should","micro","level","before","add","request","test","resolve","reject","error","message","type","userId","setTimeout","run","after","end","describe","it","act","catch","equal"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,eAAKA,MAAL,EAAf;;AAEA,MAAMC,QAAQ,gBAAM,EAAEC,mBAAF,EAAN,CAAd;;AAEAC,OAAO,MAAMF,MACVG,GADU,CACN,wBADM,EACoBC,WAAW;AACxCA,UAAQC,IAAR,CAAaA,IAAb;AACD,CAHU,EAIVF,GAJU,CAIN,qBAJM,EAIiBC,WAAW,sBAAY,CAACE,OAAD,EAAUC,MAAV,KAAqB;AACtE,QAAMC,QAAQ,qBAAW;AACvBC,aAAS,iCADc;AAEvBC,UAAS,gBAFc;AAGvBC,YAAS;AAHc,GAAX,CAAd;;AAMAJ,SAAOC,MAAM,EAAEG,QAAQ,CAAV,EAAN,CAAP;AACD,CARsC,CAJ5B,EAaVR,GAbU,CAaN,uBAbM,EAamBC,WAAW,sBAAY,CAACE,OAAD,EAAUC,MAAV,KAAqB;AACxEK,aAAW,MAAMN,SAAjB,EAA4B,IAA5B;AACD,CAFwC,CAb9B,EAgBVO,GAhBU,EAAb;AAkBAC,MAAM,MAAMd,MAAMe,GAAN,EAAZ;;AAEAC,SAAS,YAAT,EAAuB,YAAW;;AAEhCC,KAAG,sBAAH,EAA2B,MAAMjB,MAC9BkB,GAD8B,CAC1B,yBAD0B,EAE9BC,KAF8B,CAExBX,SAASA,MAAME,IAAN,CAAWX,MAAX,CAAkBqB,KAAlB,CAAyB,qBAAzB,CAFe,CAAjC;;AAKAH,KAAG,gCAAH,EAAqC,MAAMjB,MACxCkB,GADwC,CACpC,wBADoC,EAExCC,KAFwC,CAElCX,SAASA,MAAME,IAAN,CAAWX,MAAX,CAAkBqB,KAAlB,CAAyB,oBAAzB,CAFyB,CAA3C;;AAKAH,KAAG,cAAH,EAAmB,MAAMjB,MACtBkB,GADsB,CAClB,qBADkB,EAEtBC,KAFsB,CAEhBX,SAASA,MAAME,IAAN,CAAWX,MAAX,CAAkBqB,KAAlB,CAAyB,gBAAzB,CAFO,CAAzB;;AAKAH,KAAG,gBAAH,EAAqB,MAAMjB,MACtBkB,GADsB,CAClB,uBADkB,EAEtBC,KAFsB,CAEhBX,SAASA,MAAME,IAAN,CAAWX,MAAX,CAAkBqB,KAAlB,CAAyB,mBAAzB,CAFO,CAA3B;AAKD,CAtBD","file":"act-errors.spec.js","sourcesContent":["import TypedError from 'error/typed';\nimport chai from 'chai';\nimport Micro, { LEVEL_OFF, LEVEL_WARN } from '../';\n\nconst should = chai.should();\n\nconst micro = Micro({ level: LEVEL_WARN });\n\nbefore(() => micro\n  .add('cmd:act-internal-error', request => {\n    request.test.test;\n  })\n  .add('cmd:act-catch-error', request => new Promise((resolve, reject) => {\n    const error = TypedError({\n      message: '{name}: User {userId} not found',\n      type   : 'user.not.found',\n      userId : null\n    });\n\n    reject(error({ userId: 1 }));\n  }))\n  .add('cmd:act-timeout-error', request => new Promise((resolve, reject) => {\n    setTimeout(() => resolve(), 5100);\n  }))\n  .run()\n);\nafter(() => micro.end());\n\ndescribe('act-errors', function() {\n\n  it('#act not found error', () => micro\n    .act('cmd:act-not-found-error')\n    .catch(error => error.type.should.equal(`micro.act.not.found`))\n  );\n\n  it('#throw error as internal error', () => micro\n    .act('cmd:act-internal-error')\n    .catch(error => error.type.should.equal(`micro.act.internal`))\n  );\n\n  it('#catch error', () => micro\n    .act('cmd:act-catch-error')\n    .catch(error => error.type.should.equal(`user.not.found`))\n  );\n\n  it('#timeout error', () => micro\n      .act('cmd:act-timeout-error')\n      .catch(error => error.type.should.equal(`micro.act.timeout`))\n  );\n\n});"]}