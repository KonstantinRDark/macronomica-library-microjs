{"version":3,"sources":["../../src/tests/api.spec.js"],"names":["should","host","port","WorkerName","listen","worker","name","level","add","cmd","request","act","client","api","before","all","run","after","end","describe","it","equal","error","type","then","result","role","exist","be","a","with","length"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,eAAKA,MAAL,EAAf;;AAEA,MAAMC,OAAO,WAAb;AACA,MAAMC,OAAO,IAAb;AACA,MAAMC,aAAa,QAAnB;AACA,MAAMC,SAAS,EAAEH,IAAF,EAAQC,IAAR,EAAf;;AAEA,MAAMG,SAAS,gBAAM,EAAEC,MAAMH,UAAR,EAAoBC,MAApB,EAA4BG,kBAA5B,EAAN,EACVC,GADU,CACN,EAAEC,KAAK,MAAP,EADM,EACWC,WAAWA,QAAQC,GAAR,CAAY,EAAEF,KAAK,MAAP,EAAZ,CADtB,EAEVD,GAFU,CAEN,EAAEC,KAAK,MAAP,EAFM,EAEWC,WAAWA,QAAQC,GAAR,CAAY,EAAEF,KAAK,MAAP,EAAZ,CAFtB,CAAf;AAIA,MAAMG,SAAS,gBAAM,EAAEN,MAAM,QAAR,EAAkBC,kBAAlB,EAAN,EACZM,GADY,CACRV,UADQ,EACIC,MADJ,CAAf;;AAGAU,OAAO,MAAM,kBAAQC,GAAR,CAAY,CAAEV,OAAOW,GAAP,EAAF,EAAgBJ,OAAOI,GAAP,EAAhB,CAAZ,CAAb;AACAC,MAAM,MAAM,kBAAQF,GAAR,CAAY,CAAEV,OAAOa,GAAP,EAAF,EAAgBN,OAAOM,GAAP,EAAhB,CAAZ,CAAZ;;AAEAC,SAAS,KAAT,EAAgB,YAAW;AACzBC,KAAG,oBAAH,EAAyB,MAAM;AAC7B,QAAI;AACF,aAAO,gBAAM,EAAEd,MAAM,QAAR,EAAkBC,kBAAlB,EAAN,EACJM,GADI,CACA,MADA,EAEJG,GAFI,CAEA,MAAMhB,OAAOqB,KAAP,CAAa,IAAb,EAAoB,2CAApB,CAFN,CAAP;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACd,aAAOA,MAAMC,IAAN,CAAWvB,MAAX,CAAkBqB,KAAlB,CAAyB,2CAAzB,CAAP;AACD;AACF,GARD;AASAD,KAAG,mBAAH,EAAwB,MAAMf,OAAOM,GAAP,CAAW,UAAX,EAAuBa,IAAvB,CAA4BC,UAAUzB,OAAOqB,KAAP,CAAaI,MAAb,EAAqB,MAArB,CAAtC,CAA9B;AACAL,KAAG,mBAAH,EAAwB,MAAMR,OAAOD,GAAP,CAAW,UAAX,EAAuBa,IAAvB,CAA4BC,UAAUzB,OAAOqB,KAAP,CAAaI,MAAb,EAAqB,MAArB,CAAtC,CAA9B;AACAL,KAAG,0BAAH,EAA+B,MAAMR,OAClCD,GADkC,CAC9B,EAAEe,MAAM,QAAR,EAAkBjB,KAAK,SAAvB,EAD8B,EAElCe,IAFkC,CAE7BC,UAAU,kBAAQV,GAAR,CAAY,CAC1Bf,OAAO2B,KAAP,CAAaF,MAAb,CAD0B,EAE1BA,OAAOzB,MAAP,CAAc4B,EAAd,CAAiBC,CAAjB,CAAmB,OAAnB,EAA4BC,IAA5B,CAAiCC,MAAjC,CAAwC,CAAxC,CAF0B,EAG1BN,OAAQ,CAAR,EAAYzB,MAAZ,CAAmB4B,EAAnB,CAAsBC,CAAtB,CAAwB,QAAxB,EAAkCR,KAAlC,CAAwClB,UAAxC,CAH0B,CAAZ,CAFmB,CAArC;AAQAiB,KAAG,+BAAH,EAAoC,MAAMR,OACvCD,GADuC,CACnC,EAAEE,KAAK,QAAP,EAAiBJ,KAAK,MAAtB,EADmC,EAEvCe,IAFuC,CAElCC,UAAUzB,OAAOqB,KAAP,CAAaI,MAAb,EAAqB,MAArB,CAFwB,CAA1C;AAKD,CAzBD","file":"api.spec.js","sourcesContent":["import chai from 'chai';\nimport Micro, { LEVEL_OFF } from '../';\n\nconst should = chai.should();\n\nconst host = '127.0.0.1';\nconst port = 8000;\nconst WorkerName = 'worker';\nconst listen = { host, port };\n\nconst worker = Micro({ name: WorkerName, listen, level: LEVEL_OFF })\n    .add({ cmd: 'cmd1' }, request => request.act({ cmd: 'ping' }))\n    .add({ cmd: 'cmd2' }, request => request.act({ cmd: 'cmd1' }))\n  ;\nconst client = Micro({ name: 'client', level: LEVEL_OFF })\n  .api(WorkerName, listen);\n\nbefore(() => Promise.all([ worker.run(), client.run() ]));\nafter(() => Promise.all([ worker.end(), client.end() ]));\n\ndescribe('api', function() {\n  it('#error api setting', () => {\n    try {\n      return Micro({ name: 'client', level: LEVEL_OFF })\n        .api('test')\n        .run(() => should.equal(null, `micro.plugin.api-fetch.settings.not.found`));\n    } catch (error) {\n      return error.type.should.equal(`micro.plugin.api-fetch.settings.not.found`);\n    }\n  });\n  it('#exec worker ping', () => worker.act('cmd:ping').then(result => should.equal(result, 'pong')));\n  it('#exec client ping', () => client.act('cmd:ping').then(result => should.equal(result, 'pong')));\n  it('#exec client api clients', () => client\n    .act({ role: 'plugin', cmd: 'clients' })\n    .then(result => Promise.all([\n      should.exist(result),\n      result.should.be.a('array').with.length(1),\n      result[ 0 ].should.be.a('string').equal(WorkerName),\n    ]))\n  );\n  it('#exec client from worker cmd2', () => client\n    .act({ api: 'worker', cmd: 'cmd1' })\n    .then(result => should.equal(result, 'pong'))\n  );\n\n});"]}