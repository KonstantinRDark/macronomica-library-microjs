{"version":3,"sources":["../../src/methods/end.js"],"names":["app","dfd","cb","promise","timerId","setTimeout","reject","Error","then","clearTimeout","resolve","catch","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAIeA,OAAO;AACpB,MAAIC,GAAJ;AACA;;;;;AAKA,SAAOC,MAAM;AACX,QAAID,GAAJ,EAAS;AACP,aAAOA,IAAIE,OAAX;AACD;;AAEDF,UAAM,qBAAMC,EAAN,CAAN;;AAEA,QAAIE,UAAUC,WAAW,MAAMJ,IAAIK,MAAJ,CAAW,IAAIC,KAAJ,CAAU,0BAAV,CAAX,CAAjB,yBAAd;;AAEA,uCAAoBP,GAApB,EACGQ,IADH,CACQ,MAAM;AACVC,mBAAaL,OAAb;AACAH,UAAIS,OAAJ;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBH,mBAAaL,OAAb;AACAH,UAAIS,OAAJ,CAAYE,KAAZ;AACD,KARH;;AAUA,WAAOX,IAAIE,OAAX;AACD,GApBD;AAqBD,C","file":"end.js","sourcesContent":["import defer from './../utils/defer';\nimport runCloseSubscribers from './../utils/run-close-subscribers';\nimport { END_TIMEOUT } from './../constants';\n\n/**\n * @param {app} app\n * @returns {function:Promise}\n */\nexport default app => {\n  let dfd;\n  /**\n   * @namespace app.end\n   * @param {function} [cb]\n   * @returns {Promise<app>}\n   */\n  return cb => {\n    if (dfd) {\n      return dfd.promise;\n    }\n\n    dfd = defer(cb);\n    \n    let timerId = setTimeout(() => dfd.reject(new Error('error.common/end.timeout')), END_TIMEOUT);\n    \n    runCloseSubscribers(app)\n      .then(() => {\n        clearTimeout(timerId);\n        dfd.resolve();\n      })\n      .catch((error) => {\n        clearTimeout(timerId);\n        dfd.resolve(error);\n      });\n\n    return dfd.promise;\n  };\n}"]}