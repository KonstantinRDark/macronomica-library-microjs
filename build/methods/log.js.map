{"version":3,"sources":["../../src/methods/log.js"],"names":["LEVELS","app","level","logger","log","usePluginLogger","on","process","fatal","message","meta","Error","error","payload","messageInstanceError","metaInstanceError","stack","replace","id","time","started","code","inspect","depth","details","Date","toISOString","versions","features","moduleLoadList","pid","arch","platform","execPath","argv","env","join","Array","isArray","forEach","emitOne","Object","assign","appId","appName","name","emit","args","push","JSON","stringify","console","warn"],"mappings":"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","file":"log.js","sourcesContent":["import Util from 'util';\nimport isPlainObject from 'lodash.isplainobject';\nimport {\n  LEVEL_DEFAULT,\n  LEVEL_ALL,\n  LEVEL_OFF,\n  LEVEL_INFO,\n  LEVEL_TRACE,\n  LEVEL_DEBUG,\n  LEVEL_WARN,\n  LEVEL_ERROR,\n  LEVEL_FATAL,\n} from './../constants';\n\n/**\n * @name LEVELS\n * @type {Object<string, number>}\n * @enum {number}\n */\nexport const LEVELS = {\n  [ LEVEL_OFF ]: 0,\n\n  [ LEVEL_FATAL ]: 10,\n  [ LEVEL_ERROR ]: 20,\n  [ LEVEL_WARN  ]: 30,\n  [ LEVEL_INFO  ]: 40,\n  [ LEVEL_TRACE ]: 50,\n  [ LEVEL_DEBUG ]: 60,\n\n  [ LEVEL_ALL ]: 100\n};\n\n/**\n * @param {app} app\n * @param { string } [level]\n * @returns {object}\n */\nexport default (app, { level = LEVEL_DEFAULT } = {}) => {\n  /**\n   * Levels:\n   *\n   * ALL    Все уровни\n   * OFF    Отключить ведение журнала\n   *\n   * INFO   Информационные сообщения\n   * TRACE  Информационные сообщения, с дополнительной информацией\n   * DEBUG  Информационные события, которые наиболее полезны для отладки приложения.\n   *\n   * WARN   Предупреждения о потенциально опасных ситуациях\n   * ERROR  Ошибка, но которая позволяет приложению продолжать работать\n   * FATAL  Ошибка, которая приводит завершению приложения\n   */\n\n  /**\n   * @namespace app.log\n   */\n  const logger = {\n    /**\n     * @memberof app.log\n     * @type {string}\n     */\n    level,\n    /**\n     * @memberof app.log\n     * @type {Object<!string, !number>}\n     */\n    LEVELS,\n    /**\n     * @memberof app.log\n     * @name debug\n     * @param {string|Array<string>} message\n     * @param {*} [payload]\n     */\n    [ LEVEL_DEBUG ]: log(LEVEL_DEBUG),\n    /**\n     * @memberof app.log\n     * @name trace\n     * @param {string|Array<string>} message\n     * @param {*} [payload]\n     */\n    [ LEVEL_TRACE ]: log(LEVEL_TRACE),\n    /**\n     * @memberof app.log\n     * @name info\n     * @param {string|Array<string>} message\n     * @param {*} [payload]\n     */\n    [ LEVEL_INFO ] : log(LEVEL_INFO),\n    /**\n     * @memberof app.log\n     * @name warn\n     * @param {string|Array<string>} message\n     * @param {*} [payload]\n     */\n    [ LEVEL_WARN ] : log(LEVEL_WARN),\n    /**\n     * @memberof app.log\n     * @name error\n     * @param {string|Array<string>} message\n     * @param {*} [payload]\n     */\n    [ LEVEL_ERROR ]: log(LEVEL_ERROR),\n    /**\n     * @memberof app.log\n     * @name fatal\n     * @param {string|Array<string>} message\n     * @param {*} [payload]\n     */\n    [ LEVEL_FATAL ]: log(LEVEL_FATAL)\n  };\n  let usePluginLogger;\n\n  app.on('plugin.logger.use', () => usePluginLogger = true);\n  app.on('plugin.logger.unuse', () => usePluginLogger = false);\n\n  process.on('uncaughtException', logger.fatal);\n\n  return logger;\n\n  /**\n   * @param {string} level\n   * @returns {function(string, payload)}\n   */\n  function log(level) {\n    return (message, meta = {}) => {\n      if (LEVELS[ logger.level ] < LEVELS[ level ]) {\n        return logger;\n      }\n\n      if (!isPlainObject(meta)) {\n        meta = meta instanceof Error ? { error: meta } : { payload: meta };\n      }\n\n      const messageInstanceError = message instanceof Error;\n      const metaInstanceError = meta.error instanceof Error;\n\n      if (level === LEVEL_FATAL) {\n        const error = metaInstanceError\n          ? meta.error\n          : messageInstanceError ? message : new Error(message);\n        let stack = error.stack || '';\n        stack = stack\n          .replace(/^.*?\\n/, '\\n')\n          .replace(/\\n/g, '\\n          ')\n        ;\n\n        message = [\n          '############################',\n          `# Fatal Error`,\n          '# Instance  : ' + app.id,\n          '# Started At: ' + app.time.started,\n          '# ==========================',\n          '  Message   : ' + error.message,\n          '  Code      : ' + error.code,\n          '  Payload   : ' + Util.inspect(meta, { depth: null }),\n          '  Details   : ' + Util.inspect(error.details, { depth: null }),\n          '  When      : ' + (new Date()).toISOString(),\n          '  Stack     : ' + stack,\n          '  Node      : ' + Util.inspect(process.versions).replace(/\\s+/g, ' '),\n          '              ' + Util.inspect(process.features).replace(/\\s+/g, ' '),\n          '              ' + Util.inspect(process.moduleLoadList).replace(/\\s+/g, ' '),\n          '  Process   : ',\n          '              pid=' + process.pid,\n          '              arch=' + process.arch,\n          '              platform=' + process.platform,\n          '              path=' + process.execPath,\n          '              argv=' + Util.inspect(process.argv).replace(/\\n/g, ''),\n          '              env=' + Util.inspect(process.env).replace(/\\n/g, ''),\n          '############################'\n        ].join('\\n');\n      }\n\n      if (level === LEVEL_ERROR && (metaInstanceError || messageInstanceError)) {\n        const error = metaInstanceError ? meta.error : message;\n        let stack = error.stack || '';\n        stack = stack\n          .replace(/^.*?\\n/, '\\n')\n          .replace(/\\n/g, '\\n          ')\n        ;\n\n        message = [\n          '############################',\n          `# Error`,\n          '# ========================== ',\n          '  Instance  : ' + app.id,\n          '  Message   : ' + error.message,\n          '  Code      : ' + error.code,\n          '  Payload   : ' + Util.inspect(meta, { depth: null }),\n          '  Details   : ' + Util.inspect(error.details, { depth: null }),\n          '  When      : ' + (new Date()).toISOString(),\n          '  Stack     : ' + stack,\n          '  Node      : ' + Util.inspect(process.versions).replace(/\\s+/g, ' '),\n          '              ' + Util.inspect(process.features).replace(/\\s+/g, ' '),\n          '              ' + Util.inspect(process.moduleLoadList).replace(/\\s+/g, ' '),\n          '  Process   : ',\n          '              pid=' + process.pid,\n          '              arch=' + process.arch,\n          '              platform=' + process.platform,\n          '              path=' + process.execPath,\n          '              argv=' + Util.inspect(process.argv).replace(/\\n/g, ''),\n          '              env=' + Util.inspect(process.env).replace(/\\n/g, ''),\n          '############################'\n        ].join('\\n');\n      }\n\n      if (Array.isArray(message)) {\n        message.forEach(emitOne);\n      } else {\n        emitOne(message);\n      }\n\n      return logger;\n\n      function emitOne(message) {\n        Object.assign(meta, { appId: app.id, appName: app.name });\n\n        if (usePluginLogger) {\n          app.emit('log', { level, message, meta });\n          app.emit(`log.${ level }`, { level, message, meta });\n        } else {\n          const args = [ `${ level }: [${ app.id }]`, message ];\n\n          if (!!meta) {\n            args.push(JSON.stringify(meta, '', 4));\n          }\n\n          switch (level) {\n            case LEVEL_ERROR:\n            case LEVEL_FATAL:\n              console.error(...args);\n              break;\n            case LEVEL_WARN:\n              console.warn(...args);\n              break;\n            default:\n              console.log(...args);\n          }\n        }\n      }\n    };\n  }\n}"]}