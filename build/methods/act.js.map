{"version":3,"sources":["../../src/methods/act.js"],"names":["act","microjs","manager","pin","cb","dfd","msg","route","find","cmd","log","trace","reject","promise","callback","then","Promise","resolve","catch","err","error"],"mappings":";;;;;kBAIwBA,G;;AAJxB;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,GAAT,CAAaC,OAAb,EAAsBC,OAAtB,EAA+B;AAC5C,SAAO,UAACC,GAAD,EAAMC,EAAN,EAAa;AAClB,QAAMC,MAAM,qBAAMD,EAAN,CAAZ;AACA,QAAME,MAAM,sBAASH,GAAT,IAAgB,sBAAOA,GAAP,CAAhB,GAA8BA,GAA1C;AACA,QAAMI,QAAQL,QAAQM,IAAR,CAAaF,GAAb,CAAd;;AAEA,QAAI,CAACC,KAAL,EAAY;AACV,UAAID,IAAIG,GAAJ,KAAY,QAAhB,EAA0B;AACxBR,gBAAQS,GAAR,CAAYC,KAAZ,gLAAqDR,GAArD;AACD;AACD,aAAOE,IAAIO,MAAJ,+KAAP;AACD;;AAED,QAAI;AACF,UAAIC,UAAUN,MAAMO,QAAN,CAAeR,GAAf,EAAoBC,KAApB,CAAd;;AAEA,UAAI,CAACM,OAAD,IAAY,OAAOA,QAAQE,IAAf,KAAwB,UAAxC,EAAoD;AAClDF,kBAAUG,QAAQC,OAAR,CAAgBJ,OAAhB,CAAV;AACD;;AAEDA,cAAQE,IAAR,CAAaV,IAAIY,OAAjB,EAA0BC,KAA1B,CAAgCb,IAAIO,MAApC;;AAEA,aAAOP,IAAIQ,OAAX;AACD,KAVD,CAUE,OAAOM,GAAP,EAAY;AACZlB,cAAQS,GAAR,CAAYU,KAAZ,kJAAgDjB,GAAhD,EAAqDgB,GAArD;AACA,aAAOd,IAAIO,MAAJ,CAAWO,GAAX,CAAP;AACD;AACF,GA1BD;AA2BD","file":"act.js","sourcesContent":["import isString from 'lodash.isstring';\nimport jsonic from 'jsonic';\nimport defer from './../utils/defer';\n\nexport default function act(microjs, manager) {\n  return (pin, cb) => {\n    const dfd = defer(cb);\n    const msg = isString(pin) ? jsonic(pin) : pin;\n    const route = manager.find(msg);\n\n    if (!route) {\n      if (msg.cmd !== 'logger') {\n        microjs.log.trace(`Вызов не существующего маршрута`, pin);\n      }\n      return dfd.reject(`Вызов не существующего маршрута`);\n    }\n\n    try {\n      let promise = route.callback(msg, route);\n\n      if (!promise || typeof promise.then !== 'function') {\n        promise = Promise.resolve(promise);\n      }\n\n      promise.then(dfd.resolve).catch(dfd.reject);\n\n      return dfd.promise;\n    } catch (err) {\n      microjs.log.error(`Ошибка при вызове маршрута`, pin, err);\n      return dfd.reject(err);\n    }\n  };\n}"]}