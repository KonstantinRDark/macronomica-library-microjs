{"version":3,"sources":["../../src/methods/act.js"],"names":["ERROR_TYPE","ActInternalError","message","type","ActNotFoundError","code","TimeoutError","timeout","app","pin","cb","state","exec","dfd","on","setTimeout","resolve","promise","request","route","manager","find","meta","error","log","warn","reject","isNaN","timerId","wrapped","action","info","id","callback","then","result","clearTimeout","catch"],"mappings":"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","file":"act.js","sourcesContent":["import TypedError from 'error/typed';\nimport WrappedError from 'error/wrapped';\nimport isNumber from 'lodash.isnumber';\nimport defer from './../utils/defer';\nimport makeRequest, { clear } from './../utils/make-request';\nimport { ACT_TIMEOUT, STATE_RUN } from './../constants';\n\nconst ERROR_TYPE = 'micro.act';\n\nconst ActInternalError = WrappedError({\n  message: '{name}: {origMessage}',\n  type   : `${ ERROR_TYPE }.internal`\n});\n\nconst ActNotFoundError = TypedError({\n  message: '{name}: Вызов не существующего маршрута',\n  type   : `${ ERROR_TYPE }.not.found`,\n  code   : 404\n});\n\nconst TimeoutError = TypedError({\n  message: '{name}: Превышено время выполнения (timeout={timeout}) запроса',\n  type   : `${ ERROR_TYPE }.timeout`,\n  timeout: null,\n  code   : 408\n});\n\n/**\n * @param {app} app\n * @returns {function:app}\n */\nexport default app => {\n  /**\n   * @namespace app.act\n   * @param {string|object} pin\n   * @param {function} [cb]\n   * @returns {app}\n   */\n  return (pin, cb) => {\n    if (app.state === STATE_RUN) {\n      return exec(app, pin, cb);\n    }\n    \n    let dfd = defer(() => exec(app, pin, cb));\n    \n    app.on('running', () => setTimeout(dfd.resolve, 10));\n    \n    return dfd.promise;\n  };\n};\n\nfunction exec(app, pin, cb) {\n  const dfd = defer(cb);\n  const request = makeRequest(app, pin);\n  const route = app.manager.find(clear(request));\n  const meta = {\n    pin    : clear(request),\n    request: request.request\n  };\n\n  if (!route) {\n    const error = ActNotFoundError();\n    app.log.warn(error.message, meta);\n    return dfd.reject(error);\n  }\n  const timeout = isNumber(+request.timeout) && !isNaN(+request.timeout)\n    ? +request.timeout\n    : ACT_TIMEOUT;\n  let timerId;\n  \n  if (+timeout !== -1) {\n    timerId = setTimeout(() => {\n      const wrapped = TimeoutError({ timeout });\n      app.log.warn(wrapped, { ...meta, action: route.action });\n      dfd.reject(wrapped);\n    }, timeout);\n  }\n  \n  try {\n    app.log.info(`[${ meta.request.id }] Вызов маршрута (action=${ route.action.id })`, {\n      ...meta,\n      action: route.action\n    });\n    let promise = route.callback(request, route);\n    \n    if (!promise || typeof promise.then !== 'function') {\n      promise = Promise.resolve(promise);\n    }\n    \n    promise\n      .then(result => {\n        if (timerId) { clearTimeout(timerId) }\n        dfd.resolve(result);\n      })\n      .catch((error) => {\n        if (timerId) { clearTimeout(timerId) }\n        dfd.reject(error);\n      });\n    \n  } catch (error) {\n    const wrapped = ActInternalError(error);\n    if (timerId) { clearTimeout(timerId) }\n\n    app.log.error(wrapped, {\n      pin,\n      request: request.request\n    });\n\n    dfd.reject(wrapped);\n  } finally {\n    return dfd.promise;\n  }\n}"]}