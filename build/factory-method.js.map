{"version":3,"sources":["../src/factory-method.js"],"names":["factoryMethod","listenSettings","runDeferred","endDeferred","promises","run","promise","end","subscribers","manager","gex","microjs","Object","assign","log","use","add","del","api","act"],"mappings":";;;;;kBAawBA,a;;AAbxB;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,aAAT,CAAuBC,cAAvB,EAAuC;AACpD,MAAMC,cAAc,sBAApB;AACA,MAAMC,cAAc,sBAApB;AACA,MAAMC,WAAW;AACfC,SAAKH,YAAYI,OADF;AAEfC,SAAKJ,YAAYG;AAFF,GAAjB;AAIA,MAAME,cAAc,EAAEH,KAAK,EAAP,EAAWE,KAAK,EAAhB,EAApB;AACA,MAAME,UAAU,sBAAO,EAAEC,KAAK,IAAP,EAAP,CAAhB;AACA,MAAMC,UAAU,EAAhB;;AAEAC,SAAOC,MAAP,CAAcF,OAAd,EAAuB;AACrBG,SAAK,mBAAIH,OAAJ,CADgB;AAErBI,SAAK,mBAAIJ,OAAJ,EAAa,EAAEP,kBAAF,EAAYI,wBAAZ,EAAb,CAFgB;AAGrBQ,SAAK,mBAAIL,OAAJ,EAAa,EAAEF,gBAAF,EAAb,CAHgB;AAIrBQ,SAAK,mBAAIN,OAAJ,EAAa,EAAEF,gBAAF,EAAb,CAJgB;AAKrBS,SAAK,mBAAIP,OAAJ,CALgB;AAMrBQ,SAAK,mBAAIR,OAAJ,EAAa,EAAEF,gBAAF,EAAWL,kBAAX,EAAb,CANgB;AAOrBG,SAAK,mBAAII,OAAJ,EAAa,EAAEH,wBAAF,EAAeJ,kBAAf,EAAb,CAPgB;AAQrBC,SAAK,mBAAIM,OAAJ,EAAa,EAAEH,wBAAF,EAAeJ,kBAAf,EAAb,EAAwCH,cAAxC;AARgB,GAAvB;;AAWA,SAAOU,OAAP;AACD","file":"factory-method.js","sourcesContent":["import Patrun from 'patrun';\n\nimport defer from './utils/defer';\n\nimport log from './methods/log';\nimport use from './methods/use';\nimport add from './methods/add';\nimport del from './methods/del';\nimport act from './methods/act';\nimport api from './methods/api';\nimport end from './methods/end';\nimport run from './methods/run';\n\nexport default function factoryMethod(listenSettings) {\n  const runDeferred = defer();\n  const endDeferred = defer();\n  const promises = {\n    run: runDeferred.promise,\n    end: endDeferred.promise\n  };\n  const subscribers = { run: [], end: [] };\n  const manager = Patrun({ gex: true });\n  const microjs = {};\n\n  Object.assign(microjs, {\n    log: log(microjs),\n    use: use(microjs, { promises, subscribers }),\n    add: add(microjs, { manager }),\n    del: del(microjs, { manager }),\n    api: api(microjs),\n    act: act(microjs, { manager, promises }),\n    end: end(microjs, { subscribers, promises }),\n    run: run(microjs, { subscribers, promises }, listenSettings),\n  });\n\n  return microjs;\n}"]}