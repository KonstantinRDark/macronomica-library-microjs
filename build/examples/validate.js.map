{"version":3,"sources":["../../src/examples/validate.js"],"names":["micro","add","action","criteria","params","timeout","schema","__schema","default","Schema","validate","prefix","rules","type","code","id","name","slug","actionA","actionB","run","then","act","cmd","log","info","catch","error"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,QAAQ,iBAAd;;AAEAA,MAAMC,GAAN,CAAU;AACRC,UAAU,QADF,EACa;AACrBC,YAAU,GAFF,EAEa;AACrBC,UAAU,GAHF,EAGa;AACrBC,WAAU,GAJF,EAIa;AACrBC,UAAU,GALF,EAKa;;AAErBC,YAAU;AACRL,YAAU,gCADF;AAERC,cAAU,iBAFF;AAGRC,YAAU,QAHF;AAIRC,aAAU,EAAE,SAAS,QAAX,EAAqBG,SAAS,IAA9B,EAJF;AAKRF,YAAU;AACR,eAAa,QADL;AAER,mBAAa,QAFL;AAGR,cAAaG;AAHL;AALF,GAPF;;AAmBRC,YAAU;AACRC,YAAQ,cADA;AAERC,WAAQ,CACN;AACEC,YAAQ,kCADV;AAEEC,YAAQ,GAFV;AAGER,cAAQ;AACNH,kBAAU;AACRY,cAAa,iBADL;AAER,uBAAa;AAFL;AADJ;AAHV,KADM,EAWN;AACEF,YAAQ,gCADV;AAEEC,YAAQ,GAFV;AAGER,cAAQ;AACNF,gBAAQ;AACNY,gBAAM,iBADA;AAENC,gBAAM;AAFA;AADF;AAHV,KAXM;AAFA;AAnBF,CAAV,EA4CGC,OA5CH;;AA8CA,SAASA,OAAT,GAAmB,CAAE;;AAErB,SAASC,OAAT,GAAmB,CAAE;;AAErBnB,MACGoB,GADH,GAEGC,IAFH,CAEQ,MAAMrB,MAAMsB,GAAN,CAAU,EAAEC,KAAK,MAAP,EAAeb,UAAU,EAAzB,EAAV,CAFd,EAGGW,IAHH,CAGQrB,MAAMwB,GAAN,CAAUC,IAHlB,EAIGC,KAJH,CAIS1B,MAAMwB,GAAN,CAAUG,KAJnB","file":"validate.js","sourcesContent":["import Micro from './../';\n\nconst micro = Micro();\n\nmicro.add({\n  action  : 'update',  // точное значение\n  criteria: '*',       // обязательный\n  params  : '?',       // необязательный\n  timeout : '?',       // необязательный\n  schema  : '*',       // обязательный\n\n  __schema: {\n    action  : 'string:default=update,required',\n    criteria: 'object:required',\n    params  : 'object',\n    timeout : { '@type': 'number', default: 5000 },\n    schema  : {\n      '@type'    : 'object',\n      '@required': 'object',\n      'type'     : Schema,\n    },\n  },\n\n  validate: {\n    prefix: 'address.data',\n    rules : [\n      {\n        type  : '{prefix}.criteria.validate.error',\n        code  : 422,\n        schema: {\n          criteria: {\n            id         : 'string:required',\n            '@required': true\n          }\n        }\n      },\n      {\n        type  : '{prefix}.params.validate.error',\n        code  : 422,\n        schema: {\n          params: {\n            name: 'string:required',\n            slug: 'string:required'\n          }\n        }\n      }\n    ]\n  }\n}, actionA);\n\nfunction actionA() {}\n\nfunction actionB() {}\n\nmicro\n  .run()\n  .then(() => micro.act({ cmd: 'ping', validate: { } }))\n  .then(micro.log.info)\n  .catch(micro.log.error)\n;\n"]}