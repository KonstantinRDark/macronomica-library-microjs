{"version":3,"sources":["../../src/examples/api-ssh.js"],"names":["client","level","api","url","ssh","privateKey","resolve","process","env","HOME","run","then","act","cmd","criteria","login","password","log","info","end","catch","error"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,gBAAM,EAAEC,kBAAF,EAAN,EAA4BC,GAA5B,CAAgC,OAAhC,EAAyC;AACtDC,OAAK,8CADiD;AAEtDC,OAAK;AACHC,gBAAY,eAAKC,OAAL,CAAaC,QAAQC,GAAR,CAAYC,IAAZ,GAAmB,6BAAhC;AADT;AAFiD,CAAzC,CAAf;;AAOAT,OACGU,GADH,GAEGC,IAFH,CAEQX,UAAUA,OAAOY,GAAP,CAAW;AACzBV,OAAU,OADe;AAEzBW,OAAU,QAFe;AAGzBC,YAAU,EAAEC,OAAO,mBAAT,EAA8BC,UAAU,OAAxC;AAHe,CAAX,CAFlB,EAOGL,IAPH,CAOQX,OAAOiB,GAAP,CAAWC,IAPnB,EAQGP,IARH,CAQQ,MAAMX,OAAOmB,GAAP,EARd,EASGC,KATH,CASSpB,OAAOiB,GAAP,CAAWI,KATpB","file":"api-ssh.js","sourcesContent":["import path from 'path';\nimport Micro, { LEVEL_ALL } from './../';\n\nconst client = Micro({ level: LEVEL_ALL }).api('auths', {\n  url: 'root@auths.data.backend.macronomica.com:8000',\n  ssh: {\n    privateKey: path.resolve(process.env.HOME + '/.ssh/ssh-tunel-test/id_rsa')\n  }\n});\n\nclient\n  .run()\n  .then(client => client.act({\n    api     : 'auths',\n    cmd     : 'verify',\n    criteria: { login: 'kniaz@example.com', password: 'kniaz' }\n  }))\n  .then(client.log.info)\n  .then(() => client.end())\n  .catch(client.log.error);"]}