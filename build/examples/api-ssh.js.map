{"version":3,"sources":["../../src/examples/api-ssh.js"],"names":["client","api","url","ssh","privateKey","resolve","process","env","HOME","run","then","act","cmd","criteria","login","password","log","info","end","catch","error"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,kBAAQC,GAAR,CAAY,OAAZ,EAAqB;AAClCC,OAAK,oEAD6B;AAElCC,OAAK;AACHC,gBAAY,eAAKC,OAAL,CAAaC,QAAQC,GAAR,CAAYC,IAAZ,GAAmB,6BAAhC;AADT;AAF6B,CAArB,CAAf;;AAOAR,OACGS,GADH,GAEGC,IAFH,CAEQV,UAAUA,OAAOW,GAAP,CAAW;AACzBV,OAAU,OADe;AAEzBW,OAAU,QAFe;AAGzBC,YAAU,EAAEC,OAAO,mBAAT,EAA8BC,UAAU,OAAxC;AAHe,CAAX,CAFlB,EAOGL,IAPH,CAOQV,OAAOgB,GAAP,CAAWC,IAPnB,EAQGP,IARH,CAQQ,MAAMV,OAAOkB,GAAP,EARd,EASGC,KATH,CASSnB,OAAOgB,GAAP,CAAWI,KATpB","file":"api-ssh.js","sourcesContent":["import path from 'path';\nimport Micro from './../';\n\nconst client = Micro().api('auths', {\n  url: 'ssh//root@178.63.99.6:2225@auths.data.backend.macronomica.com:8000',\n  ssh: {\n    privateKey: path.resolve(process.env.HOME + '/.ssh/ssh-tunel-test/id_rsa')\n  }\n});\n\nclient\n  .run()\n  .then(client => client.act({\n    api     : 'auths',\n    cmd     : 'verify',\n    criteria: { login: 'kniaz@example.com', password: 'kniaz' }\n  }))\n  .then(client.log.info)\n  .then(() => client.end())\n  .catch(client.log.error);"]}