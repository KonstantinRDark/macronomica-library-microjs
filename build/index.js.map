{"version":3,"sources":["../src/index.js"],"names":["Micro","plugins","logger","httpTransport","id","lifecicle","started","inited","running","closed","time","undefined","actions","clients","__queue","wait","init","close","actionManager","genid","__init","length","info","join","loop","micro","next","setImmediate","jobs","start","emit","queue","job","cb","case","callback","done","args","then","die","push","code","inst","sub","Date","now","process","exit","error","stack","replace","message","inspect","details","depth","toISOString","versions","features","moduleLoadList","pid","arch","platform","execPath","argv","env","act","pin","add","client","clientOptions","listen","transportOptions","plugin","name","ready","setMaxListeners","getMaxListeners","emited","unbind","once","Math","max","on","gex","nextTick","EventEmitter","options","api"],"mappings":"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","file":"index.js","sourcesContent":["import Events from 'events';\nimport Util from 'util';\nimport patrun from 'patrun';\nimport {\n  APP_STATE_INITIALIZATION,\n  APP_STATE_INSTALLING,\n  APP_STATE_RUNNING,\n  APP_STATE_STOPPED,\n  PLUGIN_TRANSPORT_NAME_HTTP,\n  PLUGIN_LOGGER_NAME\n} from './constants';\nimport genid from './utils/genid';\nimport definePlugins from './utils/define-plugins';\nimport dateIsoString from './utils/date-iso-string';\nimport cliSeparator from './utils/cli-separator';\nimport Queue from './utils/queue';\nimport handleAct from './libs/act';\nimport handleAdd from './libs/add';\nimport handlePlugin from './libs/plugin';\nimport handleClient from './libs/client';\nimport handleListen from './libs/listen';\nimport defaultLogger from './plugins/logger';\nimport defaultTransportHttp from './plugins/transport/http';\n\nexport class Micro extends Events.EventEmitter {\n  id = genid();\n\n  lifecicle = {\n    started: false,\n    inited : false,\n    running: false,\n    closed : false\n  };\n\n  time = {\n    started: undefined\n  };\n\n  plugins = {};\n  actions = {};\n  clients = {};\n\n  __queue = {\n    wait : [],\n    init : [],\n    close: []\n  };\n\n  actionManager = undefined;\n\n  genid = genid;\n\n  constructor({\n    plugins: {\n      [ PLUGIN_LOGGER_NAME ]:logger,\n      [ PLUGIN_TRANSPORT_NAME_HTTP ]:httpTransport,\n      ...plugins\n    } = {}\n  } = {}) {\n    super();\n    const started = this.time.started = Date.now();\n    process.on('exit', this.close);\n    process.on('uncaughtException', this.die);\n\n    definePlugins(this, {\n      [ PLUGIN_LOGGER_NAME ]: logger || defaultLogger()\n    });\n\n    this.logger.info([\n      cliSeparator(),\n      '# Micro started',\n      cliSeparator({ sub: true }),\n      '# Instance  : ' + this.id,\n      `# When      : ${ dateIsoString(started) }`,\n      cliSeparator(),\n      `# Status    : ${ APP_STATE_INITIALIZATION }`,\n      cliSeparator(),\n    ].join('\\n'));\n\n    this.actionManager = patrun({ gex:true });\n\n    if (plugins) {\n      definePlugins(this, {\n        ...plugins,\n        [ PLUGIN_TRANSPORT_NAME_HTTP ]: httpTransport || defaultTransportHttp()\n      })\n    }\n\n    process.nextTick(this.__init);\n  }\n\n  __init = () => {\n    if (this.closed()) {\n      return;\n    }\n\n    if (this.__queue.wait.length) {\n      this.logger.info([ cliSeparator(), `# STATUS : ${ APP_STATE_INSTALLING }`, cliSeparator() ].join('\\n'));\n    }\n\n    this.lifecicle.inited = true;\n\n    (function loop(micro) {\n      const next = () => setImmediate(() => loop(micro));\n\n      if (micro.__queue.wait.length) {\n        return micro.__queue.wait = (new Queue({ jobs: micro.__queue.wait })).start(next);\n      }\n\n      if (!micro.lifecicle.running) {\n        micro.logger.info([ cliSeparator(), `# STATUS : ${ APP_STATE_RUNNING }`, cliSeparator() ].join('\\n'));\n        micro.emit('ready', micro);\n      }\n\n      micro.lifecicle.running = true;\n\n      if (micro.__queue.init.length) {\n        return micro.__queue.init = (new Queue({ jobs: micro.__queue.init })).start(next);\n      }\n    })(this);\n  };\n\n  queue = (job) => {\n    let cb;\n    let queue;\n\n    switch (job.case) {\n      case 'act':\n      case 'client':\n        cb = job.callback;\n        queue = this.__queue.init;\n        break;\n      case 'wait':\n      case 'close':\n        cb = (done) => job.done(...job.args).then(done, this.die);\n        queue = this.__queue[ job.case ];\n        break;\n    }\n\n    if (!this.lifecicle.inited) {\n      !!cb && queue.push(cb);\n    } else {\n      return !!cb && cb(() => { });\n    }\n\n    return this;\n  };\n\n  closed = () => {\n    return this.lifecicle.closed;\n  };\n\n  close = (code) => {\n    const inst = this;\n\n    if (inst.lifecicle.closed) {\n      return;\n    }\n\n    if (!inst.lifecicle.running) {\n      return setImmediate(() => inst.close(code));\n    }\n\n    inst.lifecicle.closed = true;\n\n    if (inst.__queue.close.length) {\n      inst.logger.info([ cliSeparator(), `# Status    : ${ APP_STATE_STOPPED }`, cliSeparator() ].join('\\n'));\n      return (new Queue({ jobs: inst.__queue.close })).start(done);\n    } else {\n      done();\n    }\n\n    function done() {\n      inst.logger.info([\n        cliSeparator(),\n        `# Micro ${ APP_STATE_STOPPED }`,\n        cliSeparator({ sub: true }),\n        '# Instance  : ' + inst.id,\n        `# When      : ${ dateIsoString(Date.now()) }`,\n        `# Code      : ${ code }`,\n        cliSeparator()\n      ].join('\\n'));\n\n      process.exit(code);\n    }\n  };\n\n  die = (error) => {\n    const micro = this;\n\n    let stack = error.stack || '';\n    stack = stack\n      .replace(/^.*?\\n/, '\\n')\n      .replace(/\\n/g, '\\n          ')\n    ;\n\n    micro.logger.error([\n      '##############################################################################################',\n      `# Fatal Error`,\n      '# Instance  : ' + micro.id,\n      '# =========================================================================================== ',\n      '  Message   : ' + error.message,\n      '  Code      : ' + error.code,\n      '  Details   : ' + Util.inspect(error.details, {depth: null}),\n      '  When      : ' + (new Date()).toISOString(),\n      '  Stack     : ' + stack,\n      '  Node      : ' + Util.inspect(process.versions).replace(/\\s+/g, ' '),\n      '              ' + Util.inspect(process.features).replace(/\\s+/g, ' '),\n      '              ' + Util.inspect(process.moduleLoadList).replace(/\\s+/g, ' '),\n      '  Process   : ',\n      '              pid=' + process.pid,\n      '              arch=' + process.arch,\n      '              platform=' + process.platform,\n      '              path=' + process.execPath,\n      '              argv=' + Util.inspect(process.argv).replace(/\\n/g, ''),\n      '              env=' + Util.inspect(process.env).replace(/\\n/g, ''),\n      '##############################################################################################'\n    ].join('\\n'));\n  };\n\n  act = (pin, callback) => {\n    return handleAct(this, pin, callback);\n  };\n\n  add = (pin, callback) => {\n    return handleAdd(this, pin, callback);\n  };\n\n  client = (clientOptions) => {\n    return handleClient(this, clientOptions);\n  };\n\n  listen = (transportOptions) => {\n    return handleListen(this, transportOptions);\n  };\n\n  plugin = (name, plugin) => {\n    return handlePlugin(this, { name, plugin })\n  };\n\n  ready = (callback) => {\n    this.setMaxListeners(this.getMaxListeners() + 1);\n    let emited = false;\n\n    const unbind = this.once('ready', () => {\n      emited = true;\n      callback(this);\n      this.setMaxListeners(Math.max(this.getMaxListeners() - 1, 0));\n    });\n\n    this.queue({\n      case: 'close',\n      args: [ unbind ],\n      done: (unbind) => {\n        if (!emited) unbind();\n      }\n    });\n\n    return unbind;\n  };\n\n  get logger() {\n    return this.plugin(PLUGIN_LOGGER_NAME)\n  };\n\n  get api() {\n    const micro = this;\n\n    return {\n      ready : micro.ready,\n      act   : micro.act,\n      add   : micro.add,\n      close : micro.close,\n      logger: micro.logger,\n      plugin: micro.plugin,\n      client: micro.client,\n      listen: micro.listen\n    }\n  }\n}\n\nexport default (options = {}) => {\n  const micro = new Micro(options);\n  return micro.api\n};"]}